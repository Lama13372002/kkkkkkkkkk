// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model SiteSettings {
  id        Int      @id @default(autoincrement())
  key       String   @unique @db.VarChar(255)
  value     String   @db.Text
  createdAt DateTime @default(now()) @db.DateTime
  updatedAt DateTime @default(now()) @updatedAt @db.DateTime
}

model Route {
  id              Int        @id @default(autoincrement())
  originCity      String     @db.VarChar(255)
  destinationCity String     @db.VarChar(255)
  distance        Float
  estimatedTime   String     @db.VarChar(255)
  priceComfort    Float
  priceBusiness   Float
  priceMinivan    Float
  description     String?    @db.Text
  popularityRating Int       @default(1)
  isActive        Boolean    @default(true)
  createdAt       DateTime   @default(now()) @db.DateTime
  updatedAt       DateTime   @default(now()) @updatedAt @db.DateTime
  transfers       Transfer[]
}

model Vehicle {
  id         Int        @id @default(autoincrement())
  class      String     @db.VarChar(50)
  brand      String     @db.VarChar(255)
  model      String     @db.VarChar(255)
  year       Int
  seats      Int
  description String?    @db.Text
  imageUrl   String?    @db.VarChar(255)
  amenities  String?    @db.Text
  isActive   Boolean    @default(true)
  createdAt  DateTime   @default(now()) @db.DateTime
  updatedAt  DateTime   @default(now()) @updatedAt @db.DateTime
  transfers  Transfer[]
}

model Transfer {
  id             Int       @id @default(autoincrement())
  routeId        Int
  vehicleId      Int?
  vehicleClass   String    @db.VarChar(50)
  customerName   String    @db.VarChar(255)
  customerPhone  String    @db.VarChar(50)
  date           DateTime  @db.Date
  time           String    @db.VarChar(50)
  origin         String    @db.VarChar(255)
  destination    String    @db.VarChar(255)
  paymentMethod  String    @db.VarChar(50)
  returnTransfer Boolean   @default(false)
  comments       String?   @db.Text
  status         String    @default("pending") @db.VarChar(50)
  price          Float
  createdAt      DateTime  @default(now()) @db.DateTime
  updatedAt      DateTime  @default(now()) @updatedAt @db.DateTime
  route          Route     @relation(fields: [routeId], references: [id])
  vehicle        Vehicle?  @relation(fields: [vehicleId], references: [id])
}

model Review {
  id           Int       @id @default(autoincrement())
  customerName String    @db.VarChar(255)
  rating       Int
  comment      String    @db.Text
  imageUrl     String?   @db.VarChar(255)
  isPublished  Boolean   @default(true)
  createdAt    DateTime  @default(now()) @db.DateTime
  updatedAt    DateTime  @default(now()) @updatedAt @db.DateTime
}

model BlogPost {
  id          Int       @id @default(autoincrement())
  title       String    @db.VarChar(255)
  slug        String    @unique @db.VarChar(255)
  content     String    @db.Text
  imageUrl    String?   @db.VarChar(255)
  excerpt     String?   @db.Text
  isPublished Boolean   @default(true)
  publishedAt DateTime?
  createdAt   DateTime  @default(now()) @db.DateTime
  updatedAt   DateTime  @default(now()) @updatedAt @db.DateTime
}

model Contact {
  id        Int       @id @default(autoincrement())
  name      String?   @db.VarChar(255)
  email     String?   @db.VarChar(255)
  phone     String?   @db.VarChar(50)
  message   String    @db.Text
  isRead    Boolean   @default(false)
  createdAt DateTime  @default(now()) @db.DateTime
  updatedAt DateTime  @default(now()) @updatedAt @db.DateTime
}
